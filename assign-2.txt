Problem 1: Product Class
class Product {
    int id;
    String name;
    double price;

    // Constructor
    Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    // Method to display product details
    void displayDetails() {
        System.out.println("Product Details:");
        System.out.println("ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Price: " + price);
    }

    public static void main(String[] args) {
        Product p1 = new Product(101, "Laptop", 75000);
        p1.displayDetails();
    }
}

 Problem 2: Library Management System
// Base class
class Book {
    String title;
    String author;
    int price;

    Book(String title, String author, int price) {
        this.title = title;
        this.author = author;
        this.price = price;
    }

    void display() {
        System.out.println("Title: " + title);
        System.out.println("Author: " + author);
        System.out.println("Price: " + price);
    }
}

// Derived class: Fiction
class Fiction extends Book {
    Fiction(String title, String author, int price) {
        super(title, author, price);
    }

    void display() {
        System.out.println("Type: Fiction");
        super.display();
    }
}

// Derived class: NonFiction
class NonFiction extends Book {
    NonFiction(String title, String author, int price) {
        super(title, author, price);
    }

    void display() {
        System.out.println("Type: Non-Fiction");
        super.display();
    }
}

public class LibraryManagement {
    public static void main(String[] args) {
        Fiction b1 = new Fiction("Harry Potter", "J.K. Rowling", 500);
        NonFiction b2 = new NonFiction("Sapiens", "Yuval Noah Harari", 700);

        System.out.println("Book 1:");
        b1.display();
        System.out.println("\nBook 2:");
        b2.display();
    }
}


Problem 3: Student Information System
// Abstract class
abstract class Person {
    String name;
    int age;

    Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    abstract void displayDetails();
}

// Derived class: Student
class Student extends Person {
    int rollNumber;

    Student(String name, int age, int rollNumber) {
        super(name, age);
        this.rollNumber = rollNumber;
    }

    void displayDetails() {
        System.out.println("Student Details:");
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Roll Number: " + rollNumber);
    }
}

// Derived class: Teacher
class Teacher extends Person {
    String subject;

    Teacher(String name, int age, String subject) {
        super(name, age);
        this.subject = subject;
    }

    void displayDetails() {
        System.out.println("Teacher Details:");
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Subject: " + subject);
    }
}

public class StudentInformation {
    public static void main(String[] args) {
        Student s = new Student("Alice", 20, 101);
        Teacher t = new Teacher("Mr. Smith", 40, "Mathematics");

        s.displayDetails();
        System.out.println();
        t.displayDetails();
    }
}

